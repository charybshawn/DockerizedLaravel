---
- name: Add Ondrej PHP PPA
  apt_repository:
    repo: ppa:ondrej/php
    state: present

- name: Update package cache after adding PPA
  apt:
    update_cache: yes

- name: Install PHP and extensions
  apt:
    name:
      - "php{{ php_version }}"
      - "php{{ php_version }}-fpm"
      - "php{{ php_version }}-cli"
      - "php{{ php_version }}-common"
      - "php{{ php_version }}-mbstring"
      - "php{{ php_version }}-xml"
      - "php{{ php_version }}-curl"
      - "php{{ php_version }}-zip"
      - "php{{ php_version }}-gd"
      - "php{{ php_version }}-intl"
      - "php{{ php_version }}-bcmath"
      - "php{{ php_version }}-mysql"
      - "php{{ php_version }}-pgsql"
      - "php{{ php_version }}-opcache"
      - "php{{ php_version }}-iconv"
      - "php{{ php_version }}-dom"
      - "php{{ php_version }}-fileinfo"
      - "php{{ php_version }}-exif"
      - "php{{ php_version }}-simplexml"
      - "php{{ php_version }}-xmlreader"
      - "php{{ php_version }}-xmlwriter"
      - "php{{ php_version }}-tokenizer"
    state: present
  notify: restart php-fpm

- name: Ensure PHP-FPM configuration directory exists
  file:
    path: "/etc/php/{{ php_version }}/fpm"
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Copy default php.ini for FPM if it doesn't exist
  copy:
    src: "/usr/lib/php/{{ php_version }}/php.ini-production"
    dest: "/etc/php/{{ php_version }}/fpm/php.ini"
    remote_src: yes
    owner: root
    group: root
    mode: '0644'
    force: no

- name: Ensure PHP CLI configuration directory exists
  file:
    path: "/etc/php/{{ php_version }}/cli"
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Copy default php.ini for CLI if it doesn't exist
  copy:
    src: "/usr/lib/php/{{ php_version }}/php.ini-production"
    dest: "/etc/php/{{ php_version }}/cli/php.ini"
    remote_src: yes
    owner: root
    group: root
    mode: '0644'
    force: no

- name: Enable PHP extensions in php.ini
  lineinfile:
    path: "/etc/php/{{ php_version }}/fpm/php.ini"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backup: yes
  loop:
    - { regexp: '^;?extension=phar', line: 'extension=phar' }
    - { regexp: '^;?extension=iconv', line: 'extension=iconv' }
    - { regexp: '^;?extension=mbstring', line: 'extension=mbstring' }
    - { regexp: '^;?extension=tokenizer', line: 'extension=tokenizer' }
  notify: restart php-fpm

- name: Enable PHP extensions in CLI php.ini
  lineinfile:
    path: "/etc/php/{{ php_version }}/cli/php.ini"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backup: yes
  loop:
    - { regexp: '^;?extension=phar', line: 'extension=phar' }
    - { regexp: '^;?extension=iconv', line: 'extension=iconv' }
    - { regexp: '^;?extension=mbstring', line: 'extension=mbstring' }
    - { regexp: '^;?extension=tokenizer', line: 'extension=tokenizer' }

- name: Create PHP-FPM main configuration
  copy:
    content: |
      [global]
      pid = /run/php/php{{ php_version }}-fpm.pid
      error_log = /var/log/php{{ php_version }}-fpm.log
      daemonize = yes
      
      include=/etc/php/{{ php_version }}/fpm/pool.d/*.conf
    dest: "/etc/php/{{ php_version }}/fpm/php-fpm.conf"
    owner: root
    group: root
    mode: '0644'

- name: Ensure pool.d directory exists
  file:
    path: "/etc/php/{{ php_version }}/fpm/pool.d"
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Create www pool configuration
  copy:
    content: |
      [www]
      user = www-data
      group = www-data
      listen = /run/php/php{{ php_version }}-fpm.sock
      listen.owner = www-data
      listen.group = www-data
      listen.mode = 0660
      pm = dynamic
      pm.max_children = 50
      pm.start_servers = 5
      pm.min_spare_servers = 5
      pm.max_spare_servers = 35
      pm.max_requests = 500
    dest: "/etc/php/{{ php_version }}/fpm/pool.d/www.conf"
    owner: root
    group: root
    mode: '0644'

- name: Configure PHP-FPM
  lineinfile:
    path: "/etc/php/{{ php_version }}/fpm/php.ini"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backup: yes
  loop:
    - { regexp: '^memory_limit =', line: 'memory_limit = 256M' }
    - { regexp: '^max_execution_time =', line: 'max_execution_time = 300' }
    - { regexp: '^upload_max_filesize =', line: 'upload_max_filesize = 64M' }
    - { regexp: '^post_max_size =', line: 'post_max_size = 64M' }
    - { regexp: '^max_input_vars =', line: 'max_input_vars = 3000' }
  notify: restart php-fpm

- name: Start and enable PHP-FPM
  service:
    name: "php{{ php_version }}-fpm"
    state: started
    enabled: yes

- name: Verify PHP installation
  command: "php{{ php_version }} --version"
  register: php_version_output
  changed_when: false

- name: Display PHP version
  debug:
    msg: "{{ php_version_output.stdout_lines[0] }}"
  when: verbose_mode | default(false)