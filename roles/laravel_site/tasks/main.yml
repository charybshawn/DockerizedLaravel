---
# Tasks for creating and managing Laravel sites

- name: Set current user
  set_fact:
    site_user: "{{ site_owner | default(lookup('env', 'SUDO_USER') | default(lookup('env', 'USER'), true)) }}"

- name: Create site directory
  file:
    path: "/var/www/{{ site_name }}"
    state: directory
    owner: "{{ site_user }}"
    group: www-data
    mode: '0755'

- name: Debug Git repository information
  debug:
    msg: "Git repo: {{ git_repo }} (Branch: {{ git_branch | default('main') }})"
  when: git_repo is defined and git_repo != ""

- name: Normalize GitHub URL if using HTTP protocol
  set_fact:
    normalized_git_repo: "{{ git_repo | regex_replace('^http://', 'https://') }}"
  when: git_repo is defined and git_repo != "" and git_repo is search('^http://github.com')

- name: Use original Git repo URL if not normalized
  set_fact:
    normalized_git_repo: "{{ git_repo }}"
  when: git_repo is defined and git_repo != "" and (normalized_git_repo is not defined)

- name: Clone Laravel repository
  git:
    repo: "{{ normalized_git_repo | default(git_repo) }}"
    dest: "/var/www/{{ site_name }}"
    version: "{{ git_branch | default('main') }}"
    accept_hostkey: yes
  register: git_clone_result
  when: git_repo is defined and git_repo != ""
  become: yes
  become_user: "{{ site_user }}"
  
- name: Fail if Git repository cloning failed
  fail:
    msg: "Failed to clone Git repository: {{ normalized_git_repo | default(git_repo) }}. Please check the repository URL and your access permissions."
  when: git_repo is defined and git_repo != "" and git_clone_result.failed is defined and git_clone_result.failed

- name: Debug Git clone result
  debug:
    var: git_clone_result
  when: git_repo is defined and git_repo != ""

- name: Create fresh Laravel project if no Git repo is specified
  shell: composer create-project laravel/laravel /var/www/{{ site_name }} --no-interaction
  args:
    creates: "/var/www/{{ site_name }}/artisan"
  become: yes
  become_user: "{{ site_user }}"
  when: git_repo is not defined or git_repo == ""

- name: Copy .env file if provided
  template:
    src: "{{ env_template | default('laravel.env.j2') }}"
    dest: "/var/www/{{ site_name }}/.env"
    owner: "{{ site_user }}"
    group: www-data
    mode: '0640'
  when: copy_env | default(true) | bool
  ignore_errors: yes

- name: Set proper permissions for Laravel directories
  file:
    path: "/var/www/{{ site_name }}/{{ item }}"
    state: directory
    owner: "{{ site_user }}"
    group: www-data
    mode: '0775'
    recurse: yes
  loop:
    - storage
    - bootstrap/cache

- name: Check if PHP version is installed
  stat:
    path: "/usr/bin/php{{ php_version | default('8.1') }}"
  register: php_binary

- name: Display warning if PHP version is not installed
  debug:
    msg: "WARNING: PHP {{ php_version | default('8.1') }} is not installed on this server. Composer installation may fail."
  when: not php_binary.stat.exists

- name: Check Node.js version
  shell: node -v
  register: node_version_output
  changed_when: false
  ignore_errors: true

- name: Extract Node.js version
  set_fact:
    current_node_version: "{{ node_version_output.stdout | regex_replace('v([0-9]+).*', '\\1') }}"
  when: node_version_output.rc == 0

- name: Check if package.json requires newer Node.js version
  block:
    - name: Read package.json engines requirement if exists
      shell: grep -o '"node":\\s*"[^"]*"' /var/www/{{ site_name }}/package.json | grep -o '[0-9.><=~^]*' || echo ""
      register: node_requirement
      changed_when: false
      failed_when: false
      
    - name: Display Node.js compatibility warning
      debug:
        msg: |
          WARNING: Your current Node.js version is v{{ node_version_output.stdout }}.
          This project may require a different version based on package.json.
          Consider updating Node.js if you encounter build issues.
      when: node_requirement.stdout != "" and node_requirement.stdout != "0" and current_node_version is defined
  when: git_repo is defined and git_repo != "" and node_version_output.rc == 0

- name: Install Composer dependencies
  shell: >
    cd /var/www/{{ site_name }} && 
    {% if force_ignore_php_version | default(false) | bool %}
    composer install --no-interaction --ignore-platform-reqs
    {% else %}
    composer install --no-interaction
    {% endif %}
  become: yes
  become_user: "{{ site_user }}"
  when: install_dependencies | default(true) | bool
  register: composer_result
  ignore_errors: yes
  
- name: Display composer error information if failed
  debug:
    msg: |
      Composer installation failed. This might be due to PHP version incompatibility.
      If this is a git project, try running the setup script again and select the option to skip composer install.
      After setup completes, you can try running 'composer install --ignore-platform-reqs' manually.
      
      Error details: {{ composer_result.stderr }}
  when: install_dependencies | default(true) | bool and composer_result.failed is defined and composer_result.failed

- name: Run key generation
  shell: cd /var/www/{{ site_name }} && php artisan key:generate --force
  become: yes
  become_user: "{{ site_user }}"
  when: generate_key | default(true) | bool
  ignore_errors: yes

- name: Install NPM dependencies
  shell: cd /var/www/{{ site_name }} && npm install
  become: yes
  become_user: "{{ site_user }}"
  when: install_npm_dependencies | default(false) | bool and npm_installed is defined and npm_installed | bool

- name: Compile assets
  shell: cd /var/www/{{ site_name }} && npm run {{ npm_command | default('dev') }}
  become: yes
  become_user: "{{ site_user }}"
  when: compile_assets | default(false) | bool and npm_installed is defined and npm_installed | bool

- name: 🌐 Creating Nginx configuration for {{ site_name }}
  debug:
    msg: |
      📝 Nginx Configuration Details:
      - Site name: {{ site_name }}
      - Domain: {{ site_domain | default(site_name + '.local') }}
      - Port: {{ site_port | default('80') }}
      - Document root: /var/www/{{ site_name }}/public
      - PHP version: {{ php_version | default('8.1') }}
      - Config file: /etc/nginx/sites-available/{{ site_name }}
  tags: ['laravel', 'nginx', 'info']

- name: Create Nginx server block
  template:
    src: "{{ nginx_template | default('laravel_nginx.j2') }}"
    dest: "/etc/nginx/sites-available/{{ site_name }}"
    owner: root
    group: root
    mode: '0644'
    backup: yes
  vars:
    server_name: "{{ site_domain | default(site_name + '.local') }}"
    root_directory: "/var/www/{{ site_name }}/public"
    port: "{{ site_port | default('80') }}"
    php_version: "{{ php_version | default('8.1') }}"
  register: nginx_config_created
  notify: nginx config test and reload

- name: ✅ Enable Nginx server block for {{ site_name }}
  file:
    src: "/etc/nginx/sites-available/{{ site_name }}"
    dest: "/etc/nginx/sites-enabled/{{ site_name }}"
    state: link
  register: nginx_site_enabled
  notify: nginx config test and reload

- name: 🔗 Add domain to /etc/hosts
  lineinfile:
    path: /etc/hosts
    line: "127.0.0.1 {{ site_domain | default(site_name + '.local') }}"
    state: present
    backup: yes
  when: update_hosts | default(true) | bool
  register: hosts_updated

- name: Run migrations if requested
  shell: cd /var/www/{{ site_name }} && php artisan migrate --force
  become: yes
  become_user: "{{ site_user }}"
  when: run_migrations | default(false) | bool and db_configured | default(false) | bool
  ignore_errors: yes

- name: Seed database if requested
  shell: cd /var/www/{{ site_name }} && php artisan db:seed --force
  become: yes
  become_user: "{{ site_user }}"
  when: seed_db | default(false) | bool and db_configured | default(false) | bool
  ignore_errors: yes 

# Auto-update setup
- name: Setup auto-update if requested
  block:
    - name: Check if cron is installed
      command: which cron
      register: cron_check
      changed_when: false
      failed_when: false
      
    - name: Install cron if not present
      apt:
        name: cron
        state: present
      when: cron_check.rc != 0
      
    - name: Ensure cron service is running
      service:
        name: cron
        state: started
        enabled: yes
      when: cron_check.rc == 0 or ansible_os_family == "Debian"
      
    - name: Create update script
      template:
        src: "../templates/update-site.sh.j2"
        dest: "/usr/local/bin/update-{{ site_name }}.sh"
        owner: root
        group: root
        mode: '0755'
      vars:
        site_user: "{{ site_user }}"
      when: git_repo is defined and git_repo != ""
    
    - name: Create cron job for auto-update
      cron:
        name: "Auto-update {{ site_name }} Laravel site"
        minute: "0"
        hour: "*/6"
        job: "/usr/local/bin/update-{{ site_name }}.sh >> /var/log/{{ site_name }}-updates.log 2>&1"
        user: "root"
      when: git_repo is defined and git_repo != ""
    
    - name: Create log file for updates
      file:
        path: "/var/log/{{ site_name }}-updates.log"
        state: touch
        owner: "{{ site_user }}"
        group: "www-data"
        mode: '0644'
      when: git_repo is defined and git_repo != ""
  when: auto_update | default('no') | lower == 'yes'

# Site information and summary generation
- name: 📊 Create site information directory
  file:
    path: "/var/lib/nginx/sites/{{ site_name }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  become: yes
  tags: ['laravel', 'documentation']

- name: 📋 Generate site configuration summary
  template:
    src: site_summary.j2
    dest: "/var/lib/nginx/sites/{{ site_name }}/summary.txt"
    owner: root
    group: root
    mode: '0644'
  become: yes
  vars:
    creation_time: "{{ ansible_date_time.iso8601 }}"
    site_config:
      name: "{{ site_name }}"
      domain: "{{ site_domain | default(site_name + '.local') }}"
      port: "{{ site_port | default('80') }}"
      document_root: "/var/www/{{ site_name }}/public"
      php_version: "{{ php_version | default('8.1') }}"
      nginx_config: "/etc/nginx/sites-available/{{ site_name }}"
      git_repo: "{{ git_repo | default('Fresh Laravel installation') }}"
      git_branch: "{{ git_branch | default('N/A') }}"
      auto_update: "{{ auto_update | default('no') }}"
      database:
        connection: "{{ db_connection | default('mysql') }}"
        name: "{{ db_database | default(site_name) }}"
        host: "{{ db_host | default('127.0.0.1') }}"
        port: "{{ db_port | default('3306') }}"
  tags: ['laravel', 'documentation']

- name: 📄 Create site status file
  copy:
    content: |
      SITE_NAME={{ site_name }}
      DOMAIN={{ site_domain | default(site_name + '.local') }}
      PORT={{ site_port | default('80') }}
      STATUS=active
      CREATED={{ ansible_date_time.iso8601 }}
      NGINX_CONFIG=/etc/nginx/sites-available/{{ site_name }}
      DOCUMENT_ROOT=/var/www/{{ site_name }}/public
      PHP_VERSION={{ php_version | default('8.1') }}
      {% if git_repo is defined and git_repo != '' %}
      GIT_REPO={{ git_repo }}
      GIT_BRANCH={{ git_branch | default('main') }}
      {% endif %}
      LOG_FILE=/var/log/nginx/{{ site_name }}_access.log
      ERROR_LOG=/var/log/nginx/{{ site_name }}_error.log
    dest: "/var/lib/nginx/sites/{{ site_name }}/status.env"
    owner: root
    group: root
    mode: '0644'
  become: yes
  tags: ['laravel', 'documentation']

- name: 🎉 Display Laravel site creation summary
  debug:
    msg: |
      🎉 Laravel Site '{{ site_name }}' Created Successfully!
      =====================================================
      
      🌐 Access Information:
      - Primary URL: http://{{ site_domain | default(site_name + '.local') }}{% if site_port | default('80') != '80' %}:{{ site_port }}{% endif %}/
      - IP Access: http://{{ ansible_default_ipv4.address }}{% if site_port | default('80') != '80' %}:{{ site_port }}{% endif %}/
      - Document Root: /var/www/{{ site_name }}/public
      
      🔧 Configuration Files:
      - Nginx Config: /etc/nginx/sites-available/{{ site_name }}
      - Nginx Enabled: /etc/nginx/sites-enabled/{{ site_name }}
      - Laravel .env: /var/www/{{ site_name }}/.env
      - Site Summary: /var/lib/nginx/sites/{{ site_name }}/summary.txt
      
      📊 Technical Details:
      - PHP Version: {{ php_version | default('8.1') }}
      - PHP-FPM Socket: /run/php/php{{ php_version | default('8.1') }}-fpm.sock
      {% if git_repo is defined and git_repo != '' %}
      - Git Repository: {{ git_repo }}
      - Branch: {{ git_branch | default('main') }}
      {% else %}
      - Installation: Fresh Laravel project
      {% endif %}
      
      🗄️ Database Configuration:
      - Connection: {{ db_connection | default('mysql') }}
      - Database: {{ db_database | default(site_name) }}
      - Host: {{ db_host | default('127.0.0.1') }}
      - Port: {{ db_port | default('3306') }}
      
      📈 Logging:
      - Access Log: /var/log/nginx/{{ site_name }}_access.log
      - Error Log: /var/log/nginx/{{ site_name }}_error.log
      {% if auto_update | default('no') | lower == 'yes' %}
      - Update Log: /var/log/{{ site_name }}-updates.log
      - Update Script: /usr/local/bin/update-{{ site_name }}.sh
      {% endif %}
      
      🚀 Quick Commands:
      - Test site: curl -H "Host: {{ site_domain | default(site_name + '.local') }}" http://localhost{% if site_port | default('80') != '80' %}:{{ site_port }}{% endif %}/
      - View logs: tail -f /var/log/nginx/{{ site_name }}_*.log
      - Laravel commands: cd /var/www/{{ site_name }} && php artisan <command>
      - Update site: {% if auto_update | default('no') | lower == 'yes' %}/usr/local/bin/update-{{ site_name }}.sh{% else %}git pull && composer install{% endif %}
      
      📝 Next Steps:
      1. Add '127.0.0.1 {{ site_domain | default(site_name + '.local') }}' to your hosts file (if not done automatically)
      2. Visit http://{{ site_domain | default(site_name + '.local') }}{% if site_port | default('80') != '80' %}:{{ site_port }}{% endif %}/ to see your Laravel application
      3. Configure your Laravel .env file for database connections
      4. Run migrations: cd /var/www/{{ site_name }} && php artisan migrate
  tags: ['laravel', 'summary'] 