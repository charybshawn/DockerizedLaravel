---
# PHP installation and configuration tasks

- name: Add PHP repository (Ubuntu)
  apt_repository:
    repo: ppa:ondrej/php
    state: present
  when: ansible_distribution == "Ubuntu"
  become: yes
  tags: ['php', 'repositories']

- name: Update package cache after adding PHP repository
  apt:
    update_cache: yes
    cache_valid_time: 3600
  when: ansible_os_family == "Debian"
  become: yes
  tags: ['php', 'packages']

- name: Install PHP versions and extensions
  apt:
    name: "php{{ item.0 }}-{{ item.1 }}"
    state: present
  loop: "{{ php_versions | product(php_extensions) | list }}"
  when: ansible_os_family == "Debian"
  become: yes
  tags: ['php', 'packages']
  notify:
    - restart php-fpm services

- name: Create PHP-FPM pool configuration directories
  file:
    path: "/etc/php/{{ item }}/fpm/pool.d"
    state: directory
    mode: '0755'
  loop: "{{ php_versions }}"
  become: yes
  tags: ['php', 'configuration']

- name: Configure PHP-FPM pools
  template:
    src: fpm-pool.conf.j2
    dest: "/etc/php/{{ item.0 }}/fpm/pool.d/{{ item.1.name }}.conf"
    owner: root
    group: root
    mode: '0644'
  loop: "{{ php_versions | product(php_fpm_pools) | list }}"
  become: yes
  tags: ['php', 'configuration']
  notify:
    - restart php-fpm services

- name: Configure PHP settings for each version and SAPI
  include_tasks: configure_php.yml
  vars:
    php_version: "{{ php_item[0] }}"
    php_sapi: "{{ php_item[1] }}"
  with_nested:
    - "{{ php_versions }}"
    - ['fpm', 'cli']
  loop_control:
    loop_var: php_item
  tags: ['php', 'configuration']

- name: Set default PHP version
  alternatives:
    name: php
    path: "/usr/bin/php{{ default_php_version }}"
    priority: 100
  become: yes
  tags: ['php', 'configuration']

- name: Test PHP-FPM configuration
  command: "php-fpm{{ item }} -t"
  loop: "{{ php_versions }}"
  register: php_fpm_config_test
  changed_when: false
  failed_when: false
  become: yes
  tags: ['php', 'services']

- name: Display PHP-FPM configuration test results
  debug:
    msg: "PHP-FPM {{ item.item }} config test: {{ 'PASSED' if item.rc == 0 else 'FAILED' }} - {{ item.stderr if item.rc != 0 else 'OK' }}"
  loop: "{{ php_fpm_config_test.results }}"
  tags: ['php', 'services']

- name: Start and enable PHP-FPM services
  service:
    name: "php{{ item }}-fpm"
    state: started
    enabled: yes
  loop: "{{ php_versions }}"
  become: yes
  tags: ['php', 'services']

- name: Verify PHP installation
  command: "php{{ item }} --version"
  loop: "{{ php_versions }}"
  register: php_version_check
  changed_when: false
  failed_when: php_version_check.rc != 0
  tags: ['php', 'verification']

- name: Display PHP versions
  debug:
    msg: "PHP {{ item.item }} installed: {{ item.stdout_lines[0] }}"
  loop: "{{ php_version_check.results }}"
  tags: ['php', 'info']