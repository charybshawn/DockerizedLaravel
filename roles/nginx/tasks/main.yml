---
# Nginx installation and configuration tasks

- name: Installing Nginx web server
  debug:
    msg: "Installing Nginx with {{ nginx_worker_processes }} worker processes"
  tags: ['nginx', 'info']

- name: Install Nginx packages
  apt:
    name: "{{ nginx_packages }}"
    state: present
    update_cache: yes
  become: yes
  notify: restart nginx
  tags: ['nginx', 'packages']

- name: Create Nginx directories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  become: yes
  loop:
    - "{{ nginx_cache_dir }}"
    - "{{ nginx_site_info_dir }}"
    - "{{ nginx_log_dir }}/sites"
  tags: ['nginx', 'directories']

- name: Configuring main nginx.conf
  debug:
    msg: "Applying optimized Nginx configuration with {{ nginx_worker_processes }} workers"
  tags: ['nginx', 'configuration']

- name: Configure main nginx.conf
  template:
    src: nginx.conf.j2
    dest: "{{ nginx_conf_dir }}/nginx.conf"
    owner: root
    group: root
    mode: '0644'
    backup: yes
  become: yes
  notify: 
    - validate nginx config
    - restart nginx
  tags: ['nginx', 'configuration']

- name: Remove default Nginx site
  file:
    path: "{{ item }}"
    state: absent
  become: yes
  loop:
    - "{{ nginx_sites_enabled_dir }}/default"
    - "{{ nginx_sites_available_dir }}/default"
  when: nginx_remove_default_site
  notify: reload nginx
  tags: ['nginx', 'configuration']

- name: Create default server configuration
  template:
    src: default-server.conf.j2
    dest: "{{ nginx_sites_available_dir }}/00-default"
    owner: root
    group: root
    mode: '0644'
  become: yes
  notify: reload nginx
  tags: ['nginx', 'configuration']

- name: Enable default server configuration
  file:
    src: "{{ nginx_sites_available_dir }}/00-default"
    dest: "{{ nginx_sites_enabled_dir }}/00-default"
    state: link
  become: yes
  notify: reload nginx
  tags: ['nginx', 'configuration']

- name: Create Nginx status configuration
  debug:
    msg: "Enabling Nginx status page at {{ nginx_status_path }}"
  when: nginx_status_enabled
  tags: ['nginx', 'monitoring']

- name: Create Nginx status configuration
  template:
    src: status.conf.j2
    dest: "{{ nginx_sites_available_dir }}/status"
    owner: root
    group: root
    mode: '0644'
  become: yes
  when: nginx_status_enabled
  notify: reload nginx
  tags: ['nginx', 'monitoring']

- name: Enable Nginx status site
  file:
    src: "{{ nginx_sites_available_dir }}/status"
    dest: "{{ nginx_sites_enabled_dir }}/status"
    state: link
  become: yes
  when: nginx_status_enabled
  notify: reload nginx
  tags: ['nginx', 'monitoring']

- name: Start and enable Nginx service
  service:
    name: "{{ nginx_service_name }}"
    state: started
    enabled: yes
  become: yes
  tags: ['nginx', 'services']

- name: Verify Nginx installation
  debug:
    msg: "Testing Nginx configuration"
  tags: ['nginx', 'verification']

- name: Test Nginx configuration
  command: nginx -t
  register: nginx_config_test
  changed_when: false
  become: yes
  tags: ['nginx', 'verification']

- name: Display Nginx configuration test results
  debug:
    msg: "Nginx configuration test passed"
  when: nginx_config_test.rc == 0
  tags: ['nginx', 'verification']

- name: Fail if Nginx configuration is invalid
  fail:
    msg: |
      ‚ùå Nginx configuration test failed:
      {{ nginx_config_test.stderr }}
  when: nginx_config_test.rc != 0
  tags: ['nginx', 'verification']

- name: Get Nginx version information
  command: nginx -v
  register: nginx_version
  changed_when: false
  tags: ['nginx', 'info']

- name: Create site information directory structure
  file:
    path: "{{ nginx_site_info_dir }}/{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  become: yes
  loop:
    - configs
    - logs
    - status
  tags: ['nginx', 'site-management']

- name: Generate Nginx installation summary
  template:
    src: nginx_summary.j2
    dest: "{{ nginx_site_info_dir }}/installation_summary.txt"
    owner: root
    group: root
    mode: '0644'
  become: yes
  vars:
    installation_time: "{{ ansible_date_time.iso8601 }}"
    nginx_version_info: "{{ nginx_version.stderr }}"
  tags: ['nginx', 'documentation']

- name: Display Nginx installation summary
  debug:
    msg: "Nginx {{ nginx_version.stderr.split('/')[1] | default('Unknown') }} installed and configured"
  tags: ['nginx', 'summary']