---
# MySQL installation and configuration tasks

- name: Install MySQL packages
  apt:
    name: "{{ mysql_packages }}"
    state: present
    update_cache: yes
  become: yes
  tags: ['mysql', 'packages']

- name: Start and enable MySQL service
  service:
    name: mysql
    state: started
    enabled: yes
  become: yes
  tags: ['mysql', 'services']

- name: Check if MySQL root password is set
  shell: mysqladmin -u root status
  register: mysql_root_status
  failed_when: false
  changed_when: false
  no_log: true
  tags: ['mysql', 'security']

- name: Set MySQL root password
  mysql_user:
    name: "{{ mysql_root_user }}"
    password: "{{ mysql_root_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    state: present
  when: mysql_root_status.rc == 0 and mysql_root_password != ""
  become: yes
  no_log: true
  tags: ['mysql', 'security']

- name: Create MySQL root configuration file
  template:
    src: my.cnf.j2
    dest: /root/.my.cnf
    owner: root
    group: root
    mode: '0600'
  when: mysql_root_password != ""
  become: yes
  no_log: true
  tags: ['mysql', 'configuration']

- name: Configure MySQL server
  template:
    src: mysqld.cnf.j2
    dest: /etc/mysql/mysql.conf.d/mysqld.cnf
    owner: root
    group: root
    mode: '0644'
    backup: yes
  become: yes
  tags: ['mysql', 'configuration']
  notify: restart mysql

- name: Remove anonymous MySQL users
  mysql_user:
    name: ""
    host_all: yes
    state: absent
    login_unix_socket: /var/run/mysqld/mysqld.sock
  when: mysql_remove_anonymous_users
  become: yes
  tags: ['mysql', 'security']

- name: Remove MySQL test database
  mysql_db:
    name: test
    state: absent
    login_unix_socket: /var/run/mysqld/mysqld.sock
  when: mysql_remove_test_database
  become: yes
  tags: ['mysql', 'security']

- name: Disallow root login remotely
  mysql_user:
    name: "{{ mysql_root_user }}"
    host: "{{ item }}"
    state: absent
    login_unix_socket: /var/run/mysqld/mysqld.sock
  loop:
    - "{{ ansible_hostname }}"
    - "127.0.0.1"
    - "::1"
  when: mysql_disallow_root_login_remotely
  become: yes
  failed_when: false
  tags: ['mysql', 'security']

- name: Create MySQL databases
  mysql_db:
    name: "{{ item.name }}"
    collation: "{{ item.collation | default('utf8mb4_unicode_ci') }}"
    encoding: "{{ item.encoding | default('utf8mb4') }}"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock
  loop: "{{ mysql_databases }}"
  become: yes
  tags: ['mysql', 'databases']

- name: Create MySQL users
  mysql_user:
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    priv: "{{ item.privileges | default('*.*:USAGE') }}"
    host: "{{ item.host | default('localhost') }}"
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock
  loop: "{{ mysql_users }}"
  when: mysql_users is defined and mysql_users | length > 0
  become: yes
  no_log: true
  tags: ['mysql', 'users']

- name: Create backup directory
  file:
    path: "{{ mysql_backup_directory }}"
    state: directory
    owner: root
    group: root
    mode: '0700'
  when: mysql_backup_enabled
  become: yes
  tags: ['mysql', 'backup']

- name: Verify MySQL installation
  mysql_db:
    name: information_schema
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock
  become: yes
  tags: ['mysql', 'verification']

- name: Display MySQL status
  debug:
    msg: |
      âœ… MySQL installation completed:
      - Version: {{ ansible_facts['packages']['mysql-server'][0]['version'] | default('Unknown') }}
      - Port: {{ mysql_port }}
      - Data directory: {{ mysql_datadir }}
      - Root password: {{ 'Set' if mysql_root_password != '' else 'Not set' }}
      - Users created: {{ mysql_users | length | default(0) }}
      - Databases created: {{ mysql_databases | length | default(0) }}
  tags: ['mysql', 'info']